@using Webclient.Models;
@model List<ServiceFull>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index";
    // Dictionary for the colorization of the status
    ViewBag.FontColors = new Dictionary<string, string>();
    ViewBag.FontColors.Add("stopped", "red");
    ViewBag.FontColors.Add("startpending", "lightgreen");
    ViewBag.FontColors.Add("stoppending", "lightred");
    ViewBag.FontColors.Add("running", "green");    
    ViewBag.FontColors.Add("continuepending", "orange");
    ViewBag.FontColors.Add("pausepending", "orange");
    ViewBag.FontColors.Add("paused", "grey");
}

<h2>Monitor</h2>

@foreach (var s in Model)
{
    <!-- Service -->
    <div class="panel panel-default" id="section_@s.Id">
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-12 col-md-4 col-lg-4">
                    <div class="row">
                        <div class="col-sm-12 col-md-6 col-lg-6">@s.DisplayName : @s.Id</div>
                        <!-- TODO: Farbe pro Status anpassen => mit Dictionary in ViewBag -->
                        <div class="col-sm-12 col-md-6 col-lg-6"><font class="status" color="@ViewBag.FontColors[s.Status]">@s.Status</font></div>
                    </div>
                    <br />
                    <div class="panel-group">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h4 class="panel-title">
                                    <a data-toggle="collapse" href="#collapse_@s.Identification">Description</a>
                                </h4>
                            </div>
                            <div id="collapse_@s.Identification" class="panel-collapse collapse">
                                <div class="panel-body">@s.Description</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- CPU usage part -->
                <div class="col-sm-12 col-md-4 col-lg-4">
                    <div class="row">
                        <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3"></div>
                        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 centered">
                            <h4>CPU Usage</h4>
                        </div>
                        <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3"></div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3"></div>
                        <div class="col-xs-6 col-sm-6 col-md-6 col-lg-6 centered">
                            <p>@s.PerformanceCPU - - @s.PerformanceRAM</p>
                        </div>
                        <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3"></div>
                    </div>
                </div>

                <div class="col-sm-12 col-md-4 col-lg-4">
                    <div class="row">
                        @if (s.Status.Equals("stopped") || s.Status.Equals("paused"))
                        {
                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><input id="start-@s.Id" type="button" class="btn btn-success button-start" value="Start"></div>
                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><input id="stop-@s.Id" type="button" class="btn btn-danger button-stop" value="Stop" disabled></div>
                        }
                        else
                        {
                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><input id="start-@s.Id" type="button" class="btn btn-success button-start" value="Start" disabled></div>
                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><input id="stop-@s.Id" type="button" class="btn btn-danger button-stop" value="Stop"></div>
                        }
                        <!--
                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">@Html.ActionLink("Start", "Start", new { id = s.Id, name = s.ServiceName }, new { @class = "btn btn-success" })</div>
                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">@Html.ActionLink("Stop", "Stop", new { id = s.Id, name = s.ServiceName }, new { @class = "btn btn-danger" })</div>  
                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4">@Html.ActionLink("Restart", "Restart", new { id = s.Id, name = s.ServiceName }, new { @class = "btn btn-warning" })</div>
                        -->
                        
                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><input id="restart-@s.Id" type="button" class="btn btn-warning button-restart" value="Restart"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
}
    <!--
        
    -->

@section Scripts {
    <script src="~/signalr/hubs"></script>
    <script src="~/Scripts/signalR-implementation.js"></script>
}
